
SSD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004ce  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000522  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000522  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000554  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000590  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000fd3  00000000  00000000  00000610  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000735  00000000  00000000  000015e3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006f4  00000000  00000000  00001d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d8  00000000  00000000  0000240c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000404  00000000  00000000  000024e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000084c  00000000  00000000  000028e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000110  00000000  00000000  00003134  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	8b 01       	movw	r16, r22
  56:	a0 01       	movw	r20, r0
  58:	b5 01       	movw	r22, r10
  5a:	ca 01       	movw	r24, r20
  5c:	df 01       	movw	r26, r30
  5e:	f4 01       	movw	r30, r8
  60:	09 02       	muls	r16, r25
  62:	1e 02       	muls	r17, r30
  64:	33 02       	muls	r19, r19
  66:	48 02       	muls	r20, r24

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf e5       	ldi	r28, 0x5F	; 95
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 2c 01 	call	0x258	; 0x258 <main>
  78:	0c 94 65 02 	jmp	0x4ca	; 0x4ca <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <DIO_voidSetPinDirection>:
DIO_voidSetPinDirection(PORTA,PIN0,OUTPUT); (DDRA,0) = 1;
*/
void		DIO_voidSetPinDirection(u8 PortID ,u8 PinID ,u8 Direction )
{
	/*		Range Check									*/
	if(PortID < 4 && PinID < 8)
  80:	84 30       	cpi	r24, 0x04	; 4
  82:	08 f0       	brcs	.+2      	; 0x86 <DIO_voidSetPinDirection+0x6>
  84:	72 c0       	rjmp	.+228    	; 0x16a <DIO_voidSetPinDirection+0xea>
  86:	68 30       	cpi	r22, 0x08	; 8
  88:	08 f0       	brcs	.+2      	; 0x8c <DIO_voidSetPinDirection+0xc>
  8a:	6f c0       	rjmp	.+222    	; 0x16a <DIO_voidSetPinDirection+0xea>
	{
		if(Direction == OUTPUT)
  8c:	41 30       	cpi	r20, 0x01	; 1
  8e:	a1 f5       	brne	.+104    	; 0xf8 <DIO_voidSetPinDirection+0x78>
		{
			switch(PortID)
  90:	81 30       	cpi	r24, 0x01	; 1
  92:	89 f0       	breq	.+34     	; 0xb6 <DIO_voidSetPinDirection+0x36>
  94:	28 f0       	brcs	.+10     	; 0xa0 <DIO_voidSetPinDirection+0x20>
  96:	82 30       	cpi	r24, 0x02	; 2
  98:	c9 f0       	breq	.+50     	; 0xcc <DIO_voidSetPinDirection+0x4c>
  9a:	83 30       	cpi	r24, 0x03	; 3
  9c:	11 f1       	breq	.+68     	; 0xe2 <DIO_voidSetPinDirection+0x62>
  9e:	08 95       	ret
			{
				case PORTA :	SET_BIT(DDRA_REG,PinID);	break;
  a0:	2a b3       	in	r18, 0x1a	; 26
  a2:	81 e0       	ldi	r24, 0x01	; 1
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	02 c0       	rjmp	.+4      	; 0xac <DIO_voidSetPinDirection+0x2c>
  a8:	88 0f       	add	r24, r24
  aa:	99 1f       	adc	r25, r25
  ac:	6a 95       	dec	r22
  ae:	e2 f7       	brpl	.-8      	; 0xa8 <DIO_voidSetPinDirection+0x28>
  b0:	82 2b       	or	r24, r18
  b2:	8a bb       	out	0x1a, r24	; 26
  b4:	08 95       	ret
				case PORTB :	SET_BIT(DDRB_REG,PinID);	break;
  b6:	27 b3       	in	r18, 0x17	; 23
  b8:	81 e0       	ldi	r24, 0x01	; 1
  ba:	90 e0       	ldi	r25, 0x00	; 0
  bc:	02 c0       	rjmp	.+4      	; 0xc2 <DIO_voidSetPinDirection+0x42>
  be:	88 0f       	add	r24, r24
  c0:	99 1f       	adc	r25, r25
  c2:	6a 95       	dec	r22
  c4:	e2 f7       	brpl	.-8      	; 0xbe <DIO_voidSetPinDirection+0x3e>
  c6:	82 2b       	or	r24, r18
  c8:	87 bb       	out	0x17, r24	; 23
  ca:	08 95       	ret
				case PORTC :	SET_BIT(DDRC_REG,PinID);	break;
  cc:	24 b3       	in	r18, 0x14	; 20
  ce:	81 e0       	ldi	r24, 0x01	; 1
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	02 c0       	rjmp	.+4      	; 0xd8 <DIO_voidSetPinDirection+0x58>
  d4:	88 0f       	add	r24, r24
  d6:	99 1f       	adc	r25, r25
  d8:	6a 95       	dec	r22
  da:	e2 f7       	brpl	.-8      	; 0xd4 <DIO_voidSetPinDirection+0x54>
  dc:	82 2b       	or	r24, r18
  de:	84 bb       	out	0x14, r24	; 20
  e0:	08 95       	ret
				case PORTD :	SET_BIT(DDRD_REG,PinID);	break;
  e2:	21 b3       	in	r18, 0x11	; 17
  e4:	81 e0       	ldi	r24, 0x01	; 1
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	02 c0       	rjmp	.+4      	; 0xee <DIO_voidSetPinDirection+0x6e>
  ea:	88 0f       	add	r24, r24
  ec:	99 1f       	adc	r25, r25
  ee:	6a 95       	dec	r22
  f0:	e2 f7       	brpl	.-8      	; 0xea <DIO_voidSetPinDirection+0x6a>
  f2:	82 2b       	or	r24, r18
  f4:	81 bb       	out	0x11, r24	; 17
  f6:	08 95       	ret
			}
		}else if(Direction == INPUT)
  f8:	41 11       	cpse	r20, r1
  fa:	37 c0       	rjmp	.+110    	; 0x16a <DIO_voidSetPinDirection+0xea>
		{
			switch(PortID)
  fc:	81 30       	cpi	r24, 0x01	; 1
  fe:	91 f0       	breq	.+36     	; 0x124 <DIO_voidSetPinDirection+0xa4>
 100:	28 f0       	brcs	.+10     	; 0x10c <DIO_voidSetPinDirection+0x8c>
 102:	82 30       	cpi	r24, 0x02	; 2
 104:	d9 f0       	breq	.+54     	; 0x13c <DIO_voidSetPinDirection+0xbc>
 106:	83 30       	cpi	r24, 0x03	; 3
 108:	29 f1       	breq	.+74     	; 0x154 <DIO_voidSetPinDirection+0xd4>
 10a:	08 95       	ret
			{
				case PORTA :	CLR_BIT(DDRA_REG,PinID);	break;
 10c:	2a b3       	in	r18, 0x1a	; 26
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	02 c0       	rjmp	.+4      	; 0x118 <DIO_voidSetPinDirection+0x98>
 114:	88 0f       	add	r24, r24
 116:	99 1f       	adc	r25, r25
 118:	6a 95       	dec	r22
 11a:	e2 f7       	brpl	.-8      	; 0x114 <DIO_voidSetPinDirection+0x94>
 11c:	80 95       	com	r24
 11e:	82 23       	and	r24, r18
 120:	8a bb       	out	0x1a, r24	; 26
 122:	08 95       	ret
				case PORTB :	CLR_BIT(DDRB_REG,PinID);	break;
 124:	27 b3       	in	r18, 0x17	; 23
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	02 c0       	rjmp	.+4      	; 0x130 <DIO_voidSetPinDirection+0xb0>
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	6a 95       	dec	r22
 132:	e2 f7       	brpl	.-8      	; 0x12c <DIO_voidSetPinDirection+0xac>
 134:	80 95       	com	r24
 136:	82 23       	and	r24, r18
 138:	87 bb       	out	0x17, r24	; 23
 13a:	08 95       	ret
				case PORTC :	CLR_BIT(DDRC_REG,PinID);	break;
 13c:	24 b3       	in	r18, 0x14	; 20
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 c0       	rjmp	.+4      	; 0x148 <DIO_voidSetPinDirection+0xc8>
 144:	88 0f       	add	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	6a 95       	dec	r22
 14a:	e2 f7       	brpl	.-8      	; 0x144 <DIO_voidSetPinDirection+0xc4>
 14c:	80 95       	com	r24
 14e:	82 23       	and	r24, r18
 150:	84 bb       	out	0x14, r24	; 20
 152:	08 95       	ret
				case PORTD :	CLR_BIT(DDRD_REG,PinID);	break;
 154:	21 b3       	in	r18, 0x11	; 17
 156:	81 e0       	ldi	r24, 0x01	; 1
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	02 c0       	rjmp	.+4      	; 0x160 <DIO_voidSetPinDirection+0xe0>
 15c:	88 0f       	add	r24, r24
 15e:	99 1f       	adc	r25, r25
 160:	6a 95       	dec	r22
 162:	e2 f7       	brpl	.-8      	; 0x15c <DIO_voidSetPinDirection+0xdc>
 164:	80 95       	com	r24
 166:	82 23       	and	r24, r18
 168:	81 bb       	out	0x11, r24	; 17
 16a:	08 95       	ret

0000016c <DIO_voidSetPinValue>:
DIO_voidSetPinValue(PORTA,PIN0,HIGH); (PORTA,0) = 1;
*/
void		DIO_voidSetPinValue(u8 PortID ,u8 PinID ,u8 Value )
{
	/*		Range Check									*/
	if(PortID < 4 && PinID < 8)
 16c:	84 30       	cpi	r24, 0x04	; 4
 16e:	08 f0       	brcs	.+2      	; 0x172 <DIO_voidSetPinValue+0x6>
 170:	72 c0       	rjmp	.+228    	; 0x256 <DIO_voidSetPinValue+0xea>
 172:	68 30       	cpi	r22, 0x08	; 8
 174:	08 f0       	brcs	.+2      	; 0x178 <DIO_voidSetPinValue+0xc>
 176:	6f c0       	rjmp	.+222    	; 0x256 <DIO_voidSetPinValue+0xea>
	{
		if(Value == HIGH)
 178:	41 30       	cpi	r20, 0x01	; 1
 17a:	a1 f5       	brne	.+104    	; 0x1e4 <DIO_voidSetPinValue+0x78>
		{
			switch(PortID)
 17c:	81 30       	cpi	r24, 0x01	; 1
 17e:	89 f0       	breq	.+34     	; 0x1a2 <DIO_voidSetPinValue+0x36>
 180:	28 f0       	brcs	.+10     	; 0x18c <DIO_voidSetPinValue+0x20>
 182:	82 30       	cpi	r24, 0x02	; 2
 184:	c9 f0       	breq	.+50     	; 0x1b8 <DIO_voidSetPinValue+0x4c>
 186:	83 30       	cpi	r24, 0x03	; 3
 188:	11 f1       	breq	.+68     	; 0x1ce <DIO_voidSetPinValue+0x62>
 18a:	08 95       	ret
			{
				case PORTA :	SET_BIT(PORTA_REG,PinID);	break;
 18c:	2b b3       	in	r18, 0x1b	; 27
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	02 c0       	rjmp	.+4      	; 0x198 <DIO_voidSetPinValue+0x2c>
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	6a 95       	dec	r22
 19a:	e2 f7       	brpl	.-8      	; 0x194 <DIO_voidSetPinValue+0x28>
 19c:	82 2b       	or	r24, r18
 19e:	8b bb       	out	0x1b, r24	; 27
 1a0:	08 95       	ret
				case PORTB :	SET_BIT(PORTB_REG,PinID);	break;
 1a2:	28 b3       	in	r18, 0x18	; 24
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <DIO_voidSetPinValue+0x42>
 1aa:	88 0f       	add	r24, r24
 1ac:	99 1f       	adc	r25, r25
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <DIO_voidSetPinValue+0x3e>
 1b2:	82 2b       	or	r24, r18
 1b4:	88 bb       	out	0x18, r24	; 24
 1b6:	08 95       	ret
				case PORTC :	SET_BIT(PORTC_REG,PinID);	break;
 1b8:	25 b3       	in	r18, 0x15	; 21
 1ba:	81 e0       	ldi	r24, 0x01	; 1
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	02 c0       	rjmp	.+4      	; 0x1c4 <DIO_voidSetPinValue+0x58>
 1c0:	88 0f       	add	r24, r24
 1c2:	99 1f       	adc	r25, r25
 1c4:	6a 95       	dec	r22
 1c6:	e2 f7       	brpl	.-8      	; 0x1c0 <DIO_voidSetPinValue+0x54>
 1c8:	82 2b       	or	r24, r18
 1ca:	85 bb       	out	0x15, r24	; 21
 1cc:	08 95       	ret
				case PORTD :	SET_BIT(PORTD_REG,PinID);	break;
 1ce:	22 b3       	in	r18, 0x12	; 18
 1d0:	81 e0       	ldi	r24, 0x01	; 1
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <DIO_voidSetPinValue+0x6e>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	6a 95       	dec	r22
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <DIO_voidSetPinValue+0x6a>
 1de:	82 2b       	or	r24, r18
 1e0:	82 bb       	out	0x12, r24	; 18
 1e2:	08 95       	ret
			}
		}else if(Value == LOW)
 1e4:	41 11       	cpse	r20, r1
 1e6:	37 c0       	rjmp	.+110    	; 0x256 <DIO_voidSetPinValue+0xea>
		{
			switch(PortID)
 1e8:	81 30       	cpi	r24, 0x01	; 1
 1ea:	91 f0       	breq	.+36     	; 0x210 <DIO_voidSetPinValue+0xa4>
 1ec:	28 f0       	brcs	.+10     	; 0x1f8 <DIO_voidSetPinValue+0x8c>
 1ee:	82 30       	cpi	r24, 0x02	; 2
 1f0:	d9 f0       	breq	.+54     	; 0x228 <DIO_voidSetPinValue+0xbc>
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	29 f1       	breq	.+74     	; 0x240 <DIO_voidSetPinValue+0xd4>
 1f6:	08 95       	ret
			{
				case PORTA :	CLR_BIT(PORTA_REG,PinID);	break;
 1f8:	2b b3       	in	r18, 0x1b	; 27
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	02 c0       	rjmp	.+4      	; 0x204 <DIO_voidSetPinValue+0x98>
 200:	88 0f       	add	r24, r24
 202:	99 1f       	adc	r25, r25
 204:	6a 95       	dec	r22
 206:	e2 f7       	brpl	.-8      	; 0x200 <DIO_voidSetPinValue+0x94>
 208:	80 95       	com	r24
 20a:	82 23       	and	r24, r18
 20c:	8b bb       	out	0x1b, r24	; 27
 20e:	08 95       	ret
				case PORTB :	CLR_BIT(PORTB_REG,PinID);	break;
 210:	28 b3       	in	r18, 0x18	; 24
 212:	81 e0       	ldi	r24, 0x01	; 1
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	02 c0       	rjmp	.+4      	; 0x21c <DIO_voidSetPinValue+0xb0>
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	6a 95       	dec	r22
 21e:	e2 f7       	brpl	.-8      	; 0x218 <DIO_voidSetPinValue+0xac>
 220:	80 95       	com	r24
 222:	82 23       	and	r24, r18
 224:	88 bb       	out	0x18, r24	; 24
 226:	08 95       	ret
				case PORTC :	CLR_BIT(PORTC_REG,PinID);	break;
 228:	25 b3       	in	r18, 0x15	; 21
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	02 c0       	rjmp	.+4      	; 0x234 <DIO_voidSetPinValue+0xc8>
 230:	88 0f       	add	r24, r24
 232:	99 1f       	adc	r25, r25
 234:	6a 95       	dec	r22
 236:	e2 f7       	brpl	.-8      	; 0x230 <DIO_voidSetPinValue+0xc4>
 238:	80 95       	com	r24
 23a:	82 23       	and	r24, r18
 23c:	85 bb       	out	0x15, r24	; 21
 23e:	08 95       	ret
				case PORTD :	CLR_BIT(PORTD_REG,PinID);	break;
 240:	22 b3       	in	r18, 0x12	; 18
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	90 e0       	ldi	r25, 0x00	; 0
 246:	02 c0       	rjmp	.+4      	; 0x24c <DIO_voidSetPinValue+0xe0>
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	6a 95       	dec	r22
 24e:	e2 f7       	brpl	.-8      	; 0x248 <DIO_voidSetPinValue+0xdc>
 250:	80 95       	com	r24
 252:	82 23       	and	r24, r18
 254:	82 bb       	out	0x12, r24	; 18
 256:	08 95       	ret

00000258 <main>:
int main(void)
{
    /* Replace with your application code */
    while (1) 
    {
		SSD_voidSetValue(SEG_2,5);
 258:	65 e0       	ldi	r22, 0x05	; 5
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	0e 94 3e 01 	call	0x27c	; 0x27c <SSD_voidSetValue>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 260:	2f ef       	ldi	r18, 0xFF	; 255
 262:	89 ef       	ldi	r24, 0xF9	; 249
 264:	90 e0       	ldi	r25, 0x00	; 0
 266:	21 50       	subi	r18, 0x01	; 1
 268:	80 40       	sbci	r24, 0x00	; 0
 26a:	90 40       	sbci	r25, 0x00	; 0
 26c:	e1 f7       	brne	.-8      	; 0x266 <main+0xe>
 26e:	00 c0       	rjmp	.+0      	; 0x270 <main+0x18>
 270:	00 00       	nop
		_delay_ms(20);
		SSD_voidSetValue(SEG_1,2);
 272:	62 e0       	ldi	r22, 0x02	; 2
 274:	80 e0       	ldi	r24, 0x00	; 0
 276:	0e 94 3e 01 	call	0x27c	; 0x27c <SSD_voidSetValue>
 27a:	ee cf       	rjmp	.-36     	; 0x258 <main>

0000027c <SSD_voidSetValue>:
#include		"DIO_private.h"

#include		"SSD_interface.h"
#include		"SSD_private.h"

void		SSD_voidSetValue(u8 SEG_ID , u8 Number){
 27c:	cf 93       	push	r28
 27e:	df 93       	push	r29
	if((SEG_ID==1 || SEG_ID==0) && Number>=0 && Number<=9){
 280:	82 30       	cpi	r24, 0x02	; 2
 282:	08 f0       	brcs	.+2      	; 0x286 <SSD_voidSetValue+0xa>
 284:	19 c1       	rjmp	.+562    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 286:	6a 30       	cpi	r22, 0x0A	; 10
 288:	08 f0       	brcs	.+2      	; 0x28c <SSD_voidSetValue+0x10>
 28a:	16 c1       	rjmp	.+556    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 28c:	d6 2f       	mov	r29, r22
 28e:	c8 2f       	mov	r28, r24
		DIO_voidSetPinDirection(Number_Port,4,OUTPUT);
 290:	41 e0       	ldi	r20, 0x01	; 1
 292:	64 e0       	ldi	r22, 0x04	; 4
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(Number_Port,5,OUTPUT);
 29a:	41 e0       	ldi	r20, 0x01	; 1
 29c:	65 e0       	ldi	r22, 0x05	; 5
 29e:	80 e0       	ldi	r24, 0x00	; 0
 2a0:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(Number_Port,6,OUTPUT);
 2a4:	41 e0       	ldi	r20, 0x01	; 1
 2a6:	66 e0       	ldi	r22, 0x06	; 6
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(Number_Port,7,OUTPUT);
 2ae:	41 e0       	ldi	r20, 0x01	; 1
 2b0:	67 e0       	ldi	r22, 0x07	; 7
 2b2:	80 e0       	ldi	r24, 0x00	; 0
 2b4:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(Enable_Port,1,OUTPUT);
 2b8:	41 e0       	ldi	r20, 0x01	; 1
 2ba:	61 e0       	ldi	r22, 0x01	; 1
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		DIO_voidSetPinDirection(Enable_Port,2,OUTPUT);
 2c2:	41 e0       	ldi	r20, 0x01	; 1
 2c4:	62 e0       	ldi	r22, 0x02	; 2
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	0e 94 40 00 	call	0x80	; 0x80 <DIO_voidSetPinDirection>
		
		switch(SEG_ID){
 2cc:	cc 23       	and	r28, r28
 2ce:	19 f0       	breq	.+6      	; 0x2d6 <SSD_voidSetValue+0x5a>
 2d0:	c1 30       	cpi	r28, 0x01	; 1
 2d2:	61 f0       	breq	.+24     	; 0x2ec <SSD_voidSetValue+0x70>
 2d4:	15 c0       	rjmp	.+42     	; 0x300 <SSD_voidSetValue+0x84>
			case SEG_1 :
						DIO_voidSetPinValue(Enable_Port,1,1);
 2d6:	41 e0       	ldi	r20, 0x01	; 1
 2d8:	61 e0       	ldi	r22, 0x01	; 1
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Enable_Port,2,0);
 2e0:	40 e0       	ldi	r20, 0x00	; 0
 2e2:	62 e0       	ldi	r22, 0x02	; 2
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 2ea:	0a c0       	rjmp	.+20     	; 0x300 <SSD_voidSetValue+0x84>
			case SEG_2 :
						DIO_voidSetPinValue(Enable_Port,1,0);
 2ec:	40 e0       	ldi	r20, 0x00	; 0
 2ee:	61 e0       	ldi	r22, 0x01	; 1
 2f0:	81 e0       	ldi	r24, 0x01	; 1
 2f2:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Enable_Port,2,1);
 2f6:	41 e0       	ldi	r20, 0x01	; 1
 2f8:	62 e0       	ldi	r22, 0x02	; 2
 2fa:	81 e0       	ldi	r24, 0x01	; 1
 2fc:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
		}
		switch(Number){
 300:	8d 2f       	mov	r24, r29
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	8a 30       	cpi	r24, 0x0A	; 10
 306:	91 05       	cpc	r25, r1
 308:	08 f0       	brcs	.+2      	; 0x30c <SSD_voidSetValue+0x90>
 30a:	d6 c0       	rjmp	.+428    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
 30c:	fc 01       	movw	r30, r24
 30e:	e6 5d       	subi	r30, 0xD6	; 214
 310:	ff 4f       	sbci	r31, 0xFF	; 255
 312:	0c 94 5f 02 	jmp	0x4be	; 0x4be <__tablejump2__>
			case 0:
						DIO_voidSetPinValue(Number_Port,4,0);
 316:	40 e0       	ldi	r20, 0x00	; 0
 318:	64 e0       	ldi	r22, 0x04	; 4
 31a:	80 e0       	ldi	r24, 0x00	; 0
 31c:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,0);
 320:	40 e0       	ldi	r20, 0x00	; 0
 322:	65 e0       	ldi	r22, 0x05	; 5
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,0);
 32a:	40 e0       	ldi	r20, 0x00	; 0
 32c:	66 e0       	ldi	r22, 0x06	; 6
 32e:	80 e0       	ldi	r24, 0x00	; 0
 330:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,0);
 334:	40 e0       	ldi	r20, 0x00	; 0
 336:	67 e0       	ldi	r22, 0x07	; 7
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 33e:	bc c0       	rjmp	.+376    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
			case 1:
						DIO_voidSetPinValue(Number_Port,4,1);
 340:	41 e0       	ldi	r20, 0x01	; 1
 342:	64 e0       	ldi	r22, 0x04	; 4
 344:	80 e0       	ldi	r24, 0x00	; 0
 346:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,0);
 34a:	40 e0       	ldi	r20, 0x00	; 0
 34c:	65 e0       	ldi	r22, 0x05	; 5
 34e:	80 e0       	ldi	r24, 0x00	; 0
 350:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,0);
 354:	40 e0       	ldi	r20, 0x00	; 0
 356:	66 e0       	ldi	r22, 0x06	; 6
 358:	80 e0       	ldi	r24, 0x00	; 0
 35a:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,0);
 35e:	40 e0       	ldi	r20, 0x00	; 0
 360:	67 e0       	ldi	r22, 0x07	; 7
 362:	80 e0       	ldi	r24, 0x00	; 0
 364:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 368:	a7 c0       	rjmp	.+334    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
			case 2:
						DIO_voidSetPinValue(Number_Port,4,0);
 36a:	40 e0       	ldi	r20, 0x00	; 0
 36c:	64 e0       	ldi	r22, 0x04	; 4
 36e:	80 e0       	ldi	r24, 0x00	; 0
 370:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,1);
 374:	41 e0       	ldi	r20, 0x01	; 1
 376:	65 e0       	ldi	r22, 0x05	; 5
 378:	80 e0       	ldi	r24, 0x00	; 0
 37a:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,0);
 37e:	40 e0       	ldi	r20, 0x00	; 0
 380:	66 e0       	ldi	r22, 0x06	; 6
 382:	80 e0       	ldi	r24, 0x00	; 0
 384:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,0);
 388:	40 e0       	ldi	r20, 0x00	; 0
 38a:	67 e0       	ldi	r22, 0x07	; 7
 38c:	80 e0       	ldi	r24, 0x00	; 0
 38e:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 392:	92 c0       	rjmp	.+292    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
			case 3:
						DIO_voidSetPinValue(Number_Port,4,1);
 394:	41 e0       	ldi	r20, 0x01	; 1
 396:	64 e0       	ldi	r22, 0x04	; 4
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,1);
 39e:	41 e0       	ldi	r20, 0x01	; 1
 3a0:	65 e0       	ldi	r22, 0x05	; 5
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,0);
 3a8:	40 e0       	ldi	r20, 0x00	; 0
 3aa:	66 e0       	ldi	r22, 0x06	; 6
 3ac:	80 e0       	ldi	r24, 0x00	; 0
 3ae:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,0);
 3b2:	40 e0       	ldi	r20, 0x00	; 0
 3b4:	67 e0       	ldi	r22, 0x07	; 7
 3b6:	80 e0       	ldi	r24, 0x00	; 0
 3b8:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 3bc:	7d c0       	rjmp	.+250    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
			case 4:
						DIO_voidSetPinValue(Number_Port,4,0);
 3be:	40 e0       	ldi	r20, 0x00	; 0
 3c0:	64 e0       	ldi	r22, 0x04	; 4
 3c2:	80 e0       	ldi	r24, 0x00	; 0
 3c4:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,0);
 3c8:	40 e0       	ldi	r20, 0x00	; 0
 3ca:	65 e0       	ldi	r22, 0x05	; 5
 3cc:	80 e0       	ldi	r24, 0x00	; 0
 3ce:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,1);
 3d2:	41 e0       	ldi	r20, 0x01	; 1
 3d4:	66 e0       	ldi	r22, 0x06	; 6
 3d6:	80 e0       	ldi	r24, 0x00	; 0
 3d8:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,0);
 3dc:	40 e0       	ldi	r20, 0x00	; 0
 3de:	67 e0       	ldi	r22, 0x07	; 7
 3e0:	80 e0       	ldi	r24, 0x00	; 0
 3e2:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 3e6:	68 c0       	rjmp	.+208    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
			case 5:
						DIO_voidSetPinValue(Number_Port,4,1);
 3e8:	41 e0       	ldi	r20, 0x01	; 1
 3ea:	64 e0       	ldi	r22, 0x04	; 4
 3ec:	80 e0       	ldi	r24, 0x00	; 0
 3ee:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,0);
 3f2:	40 e0       	ldi	r20, 0x00	; 0
 3f4:	65 e0       	ldi	r22, 0x05	; 5
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,1);
 3fc:	41 e0       	ldi	r20, 0x01	; 1
 3fe:	66 e0       	ldi	r22, 0x06	; 6
 400:	80 e0       	ldi	r24, 0x00	; 0
 402:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,0);
 406:	40 e0       	ldi	r20, 0x00	; 0
 408:	67 e0       	ldi	r22, 0x07	; 7
 40a:	80 e0       	ldi	r24, 0x00	; 0
 40c:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 410:	53 c0       	rjmp	.+166    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
			case 6:
						DIO_voidSetPinValue(Number_Port,4,0);
 412:	40 e0       	ldi	r20, 0x00	; 0
 414:	64 e0       	ldi	r22, 0x04	; 4
 416:	80 e0       	ldi	r24, 0x00	; 0
 418:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,1);
 41c:	41 e0       	ldi	r20, 0x01	; 1
 41e:	65 e0       	ldi	r22, 0x05	; 5
 420:	80 e0       	ldi	r24, 0x00	; 0
 422:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,1);
 426:	41 e0       	ldi	r20, 0x01	; 1
 428:	66 e0       	ldi	r22, 0x06	; 6
 42a:	80 e0       	ldi	r24, 0x00	; 0
 42c:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,0);
 430:	40 e0       	ldi	r20, 0x00	; 0
 432:	67 e0       	ldi	r22, 0x07	; 7
 434:	80 e0       	ldi	r24, 0x00	; 0
 436:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 43a:	3e c0       	rjmp	.+124    	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
			case 7:
						DIO_voidSetPinValue(Number_Port,4,1);
 43c:	41 e0       	ldi	r20, 0x01	; 1
 43e:	64 e0       	ldi	r22, 0x04	; 4
 440:	80 e0       	ldi	r24, 0x00	; 0
 442:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,1);
 446:	41 e0       	ldi	r20, 0x01	; 1
 448:	65 e0       	ldi	r22, 0x05	; 5
 44a:	80 e0       	ldi	r24, 0x00	; 0
 44c:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,1);
 450:	41 e0       	ldi	r20, 0x01	; 1
 452:	66 e0       	ldi	r22, 0x06	; 6
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,0);
 45a:	40 e0       	ldi	r20, 0x00	; 0
 45c:	67 e0       	ldi	r22, 0x07	; 7
 45e:	80 e0       	ldi	r24, 0x00	; 0
 460:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 464:	29 c0       	rjmp	.+82     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
			case 8:
						DIO_voidSetPinValue(Number_Port,4,0);
 466:	40 e0       	ldi	r20, 0x00	; 0
 468:	64 e0       	ldi	r22, 0x04	; 4
 46a:	80 e0       	ldi	r24, 0x00	; 0
 46c:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,0);
 470:	40 e0       	ldi	r20, 0x00	; 0
 472:	65 e0       	ldi	r22, 0x05	; 5
 474:	80 e0       	ldi	r24, 0x00	; 0
 476:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,0);
 47a:	40 e0       	ldi	r20, 0x00	; 0
 47c:	66 e0       	ldi	r22, 0x06	; 6
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,1);
 484:	41 e0       	ldi	r20, 0x01	; 1
 486:	67 e0       	ldi	r22, 0x07	; 7
 488:	80 e0       	ldi	r24, 0x00	; 0
 48a:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						break;
 48e:	14 c0       	rjmp	.+40     	; 0x4b8 <__EEPROM_REGION_LENGTH__+0xb8>
			case 9:
						DIO_voidSetPinValue(Number_Port,4,1);
 490:	41 e0       	ldi	r20, 0x01	; 1
 492:	64 e0       	ldi	r22, 0x04	; 4
 494:	80 e0       	ldi	r24, 0x00	; 0
 496:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,5,0);
 49a:	40 e0       	ldi	r20, 0x00	; 0
 49c:	65 e0       	ldi	r22, 0x05	; 5
 49e:	80 e0       	ldi	r24, 0x00	; 0
 4a0:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,6,0);
 4a4:	40 e0       	ldi	r20, 0x00	; 0
 4a6:	66 e0       	ldi	r22, 0x06	; 6
 4a8:	80 e0       	ldi	r24, 0x00	; 0
 4aa:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
						DIO_voidSetPinValue(Number_Port,7,1);
 4ae:	41 e0       	ldi	r20, 0x01	; 1
 4b0:	67 e0       	ldi	r22, 0x07	; 7
 4b2:	80 e0       	ldi	r24, 0x00	; 0
 4b4:	0e 94 b6 00 	call	0x16c	; 0x16c <DIO_voidSetPinValue>
		}
	}
	
	
	
 4b8:	df 91       	pop	r29
 4ba:	cf 91       	pop	r28
 4bc:	08 95       	ret

000004be <__tablejump2__>:
 4be:	ee 0f       	add	r30, r30
 4c0:	ff 1f       	adc	r31, r31
 4c2:	05 90       	lpm	r0, Z+
 4c4:	f4 91       	lpm	r31, Z
 4c6:	e0 2d       	mov	r30, r0
 4c8:	09 94       	ijmp

000004ca <_exit>:
 4ca:	f8 94       	cli

000004cc <__stop_program>:
 4cc:	ff cf       	rjmp	.-2      	; 0x4cc <__stop_program>
